name: gitStream and ESLint Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      client_payload:
        description: 'The Client payload'
        required: true
      full_repository:
        description: 'The repository name including the owner in owner/repo_name format'
        required: true
      head_ref:
        description: 'The head SHA'
        required: true
      base_ref:
        description: 'The base ref'
        required: true
      installation_id:
        description: 'The installation ID'
        required: false
      resolver_url:
        description: 'The resolver URL to pass results to'
        required: true
      resolver_token:
        description: 'Optional resolver token for resolver service'
        required: false
        default: ""

jobs:
  gitStream:
    runs-on: ubuntu-latest
    name: gitStream Workflow Automation
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci

      - name: Evaluate GitStream Rules
        uses: linear-b/gitstream-github-action@v2  # Upgraded to v2
        id: rules-engine
        continue-on-error: true
        with:
          full_repository: ${{ inputs.full_repository || github.repository }}
          head_ref: ${{ inputs.head_ref || github.head_ref }}
          base_ref: ${{ inputs.base_ref || github.base_ref }}
          client_payload: ${{ inputs.client_payload }}  # Fixed YAML input formatting
          installation_id: ${{ inputs.installation_id || '' }}
          resolver_url: ${{ inputs.resolver_url }}
          resolver_token: ${{ inputs.resolver_token || secrets.RESOLVER_TOKEN || '' }}

      - name: Debug gitStream output
        if: always()
        run: |
          echo "GitStream exit code: ${{ steps.rules-engine.outcome }}"
          echo "GitStream outputs: ${{ toJson(steps.rules-engine.outputs) }}"

      - name: Report GitStream status
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: '${{ job.status }}',
            context: 'gitStream Workflow Automation',
            description: 'gitStream job completed with status: ${{ job.status }}'
          })

  lint:
    runs-on: ubuntu-latest
    name: ESLint Check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npx eslint . --format stylish  # Added ESLint output formatting
        continue-on-error: true
      
      - name: Report ESLint status
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: '${{ job.status }}',
            context: 'ESLint Check',
            description: 'ESLint job completed with status: ${{ job.status }}'
          })
