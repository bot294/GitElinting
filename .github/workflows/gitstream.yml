name: gitStream and ESLint Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      client_payload:
        description: 'The Client payload'
        required: true
      full_repository:
        description: 'The repository name including the owner in owner/repo_name format'
        required: true
      head_ref:
        description: 'The head sha'
        required: true
      base_ref:
        description: 'The base ref'
        required: true
      installation_id:
        description: 'The installation id'
        required: false
      resolver_url:
        description: 'The resolver url to pass results to'
        required: true
      resolver_token:
        description: 'Optional resolver token for resolver service'
        required: false
        default: ""

name: gitStream Workflow

on:
  pull_request:
    branches:
      - main

jobs:
  gitStream:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Run GitStream Action
        uses: linear-b/gitstream-github-action@v1
        with:
          full_repository: ${{ github.repository }}
          head_ref: ${{ github.head_ref }}
          base_ref: ${{ github.base_ref }}

      - name: Cleanup GitStream data
        run: |
          rm -rf gitstream
          rm -rf code

      - name: Debug gitStream output
        if: always()
        run: |
          echo "GitStream exit code: ${{ steps.rules-engine.outcome }}"
          echo "GitStream outputs: ${{ toJson(steps.rules-engine.outputs) }}"

      - name: Report gitStream status
        if: always()
        uses: actions/github-script@v6  # Removed invalid 'node-version'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: '${{ job.status }}',
              context: 'gitStream workflow automation',
              description: 'gitStream job completed with status: ${{ job.status }}'
            })

  lint:
    runs-on: ubuntu-latest
    name: ESLint Check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Removed invalid 'node-version'
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Set Node.js version to 20

      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npx eslint .
        continue-on-error: true
      
      - name: Report ESLint status
        if: always()
        uses: actions/github-script@v6  # Removed invalid 'node-version'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: '${{ job.status }}',
              context: 'ESLint Check',
              description: 'ESLint job completed with status: ${{ job.status }}'
            })
