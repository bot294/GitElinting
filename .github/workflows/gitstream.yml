name: gitStream workflow automation
run-name: |
  /:\ gitStream: PR #${{ fromJSON(fromJSON(github.event.inputs.client_payload)).pullRequestNumber }} from ${{ github.event.inputs.full_repository }}

on:
  workflow_dispatch:
    inputs:
      client_payload:
        description: The Client payload
        required: true
      full_repository:
        description: the repository name include the owner in `owner/repo_name` format
        required: true
      head_ref:
        description: the head sha
        required: true
      base_ref:
        description: the base ref
        required: true
      installation_id:
        description: the installation id
        required: false
      resolver_url:
        description: the resolver url to pass results to
        required: true
      resolver_token:
        description: Optional resolver token for resolver service
        required: false
        default: ""

jobs:
  gitStream:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    name: gitStream workflow automation
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install dependencies
      - name: Install Node.js dependencies
        run: npm install

      - name: Evaluate GitStream Rules
        uses: linear-b/gitstream-github-action@v2
        id: rules-engine
        with:
          full_repository: ${{ github.event.inputs.full_repository }}
          head_ref: ${{ github.event.inputs.head_ref }}
          base_ref: ${{ github.event.inputs.base_ref }}
          client_payload: ${{ github.event.inputs.client_payload }}
          installation_id: ${{ github.event.inputs.installation_id }}
          resolver_url: ${{ github.event.inputs.resolver_url }}
          resolver_token: ${{ github.event.inputs.resolver_token }}

  # New job for ESLint check
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install Node.js dependencies to run ESLint
      - name: Install dependencies
        run: npm ci

      # Set executable permissions for node modules
      - name: Set executable permissions for node modules
        run: chmod +x ./node_modules/.bin/eslint

      # Run ESLint
      - name: Run ESLint
        id: lint # Set the id for reference later
        run: npm run lint -- --format checkstyle --output-file eslint-report.xml
        continue-on-error: true

      # Upload ESLint report (if needed)
      - name: Upload ESLint report
        uses: actions/upload-artifact@v3
        with:
          name: eslint-report
          path: eslint-report.xml

      # Use GitHub script to create detailed ESLint check
      - name: Create ESLint Check Run
        uses: actions/github-script@v6
        with:
          script: |
            const conclusion = steps.lint.outcome === 'success' ? 'success' : 'failure';
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'ESLint',
              head_sha: context.sha,
              status: 'completed',
              conclusion: conclusion,
              output: {
                title: 'ESLint Check',
                summary: 'ESLint issues reported in this run',
                text: 'Check the ESLint report for detailed errors or warnings.'
              }
            });
