name: gitStream and ESLint Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  gitStream:
    runs-on: ubuntu-latest
    name: gitStream workflow automation
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Evaluate GitStream Rules
        uses: linear-b/gitstream-github-action@v3
        id: rules-engine
        continue-on-error: true
        with:
          base_ref: ${{ github.base_ref }}
          head_ref: ${{ github.head_ref }}
      - name: Debug gitStream output
        if: always()
        run: |
          echo "GitStream exit code: ${{ steps.rules-engine.exitCode }}"
          echo "GitStream outputs: ${{ toJson(steps.rules-engine.outputs) }}"
      - name: Report gitStream status
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: '${{ job.status }}',
              context: 'gitStream workflow automation',
              description: 'gitStream job completed with status: ${{ job.status }}'
            })

  lint:
    runs-on: ubuntu-latest
    name: ESLint Check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npx eslint .
        continue-on-error: true
      - name: Report ESLint status
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: '${{ job.status }}',
              context: 'ESLint Check',
              description: 'ESLint job completed with status: ${{ job.status }}'
            })
