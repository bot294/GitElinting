name: gitStream PR Automation
run-name: "/:\\ gitStream: PR #${{ github.event.number }} from ${{ github.event.pull_request.head.repo.full_name }}"

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  gitStream:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js dependencies
        run: npm install

      - name: Evaluate GitStream Rules
        uses: linear-b/gitstream-github-action@v2
        id: rules-engine
        with:
          full_repository: ${{ github.repository }}
          head_ref: ${{ github.head_ref }}
          base_ref: ${{ github.base_ref }}
          client_payload: ${{ github.event.client_payload }}
          installation_id: ${{ github.event.installation_id }}
          resolver_url: ${{ github.event.resolver_url }}
          resolver_token: ${{ github.event.resolver_token }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies for ESLint
        run: npm ci

      - name: Run ESLint
        id: lint
        run: npm run lint -- --format checkstyle --output-file eslint-report.xml
        continue-on-error: true

      - name: Upload ESLint report
        uses: actions/upload-artifact@v3
        with:
          name: eslint-report
          path: eslint-report.xml

      - name: Create ESLint Check Run
        uses: actions/github-script@v6
        with:
          script: |
            const headSha = context.payload.pull_request.head.sha;
            const conclusion = '${{ steps.lint.outcome }}' === 'success' ? 'success' : 'failure';
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'ESLint',
              head_sha: headSha,
              status: 'completed',
              conclusion: conclusion,
              output: {
                title: 'ESLint Check',
                summary: 'ESLint issues reported in this run',
                text: 'Check the ESLint report for detailed errors or warnings.'
              }
            });

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner -Dsonar.projectKey=your_project_key \
            -Dsonar.organization=your_org \
            -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
