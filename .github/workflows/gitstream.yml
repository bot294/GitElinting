name: gitStream and ESLint Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      client_payload: ...

jobs:
  gitStream:
    runs-on: ubuntu-latest
    name: gitStream workflow automation
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Evaluate GitStream Rules
        uses: linear-b/gitstream-github-action@v2
        id: rules-engine
        with:
          full_repository: ${{ github.event.inputs.full_repository || github.repository }}
          head_ref: ${{ github.event.inputs.head_ref || github.head_ref }}
          base_ref: ${{ github.event.inputs.base_ref || github.base_ref }}
          client_payload: ${{ github.event.inputs.client_payload || '{}' }}
          installation_id: ${{ github.event.inputs.installation_id }}
          resolver_url: ${{ github.event.inputs.resolver_url }}
          resolver_token: ${{ github.event.inputs.resolver_token }}

  lint:
    runs-on: ubuntu-latest
    name: ESLint Check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: |
          npx eslint . --format json --output-file eslint_report.json
        continue-on-error: true

      - name: Check ESLint results
        run: |
          ERROR_COUNT=$(jq '[.[] | select(.errorCount > 0 or .warningCount > 0)] | length' eslint_report.json)
          echo "ESLint error count: $ERROR_COUNT"
          if [ "$ERROR_COUNT" -gt 0 ]; then
            echo "eslint_failed=true" >> $GITHUB_ENV
          else
            echo "eslint_failed=false" >> $GITHUB_ENV
          fi

      - name: Report ESLint status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const eslint_failed = process.env.eslint_failed === 'true';
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: eslint_failed ? 'failure' : 'success',
              context: 'ESLint Check',
              description: eslint_failed ? 'ESLint found errors or warnings' : 'ESLint passed'
            });
            if (eslint_failed) {
              core.setFailed('ESLint check failed');
            }
