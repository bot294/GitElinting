name: gitStream and ESLint Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      client_payload:
        description: 'The Client payload'
        required: true
      full_repository:
        description: 'The repository name including the owner in owner/repo_name format'
        required: true
      head_ref:
        description: 'The head sha'
        required: true
      base_ref:
        description: 'The base ref'
        required: true
      installation_id:
        description: 'The installation id'
        required: false
      resolver_url:
        description: 'The resolver url to pass results to'
        required: true
      resolver_token:
        description: 'Optional resolver token for resolver service'
        required: false
        default: ""

jobs:
  gitStream:
    runs-on: ubuntu-latest
    name: gitStream workflow automation
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Debug Inputs
        run: |
          echo "Full repository: ${{ github.repository }}"
          echo "Head ref: ${{ github.head_ref }}"
          echo "Base ref: ${{ github.base_ref }}"
          echo "Client payload: ${{ github.event.inputs.client_payload || '{}' }}"

      - name: Evaluate GitStream Rules
        uses: linear-b/gitstream-github-action@v2
        id: rules-engine
        continue-on-error: true
        with:
          full_repository: ${{ github.repository }}
          head_ref: ${{ github.head_ref }}
          base_ref: ${{ github.base_ref }}
          client_payload: '${{ github.event.inputs.client_payload || "{}" }}'
          installation_id: ${{ github.event.inputs.installation_id || '' }}
          resolver_url: ${{ github.event.inputs.resolver_url }}
          resolver_token: ${{ github.event.inputs.resolver_token || secrets.RESOLVER_TOKEN || '' }}

      - name: Debug gitStream output
        if: always()
        run: |
          echo "GitStream exit code: ${{ steps.rules-engine.outcome }}"
          echo "GitStream outputs: ${{ toJson(steps.rules-engine.outputs) }}"
